##### ##### ##### #####
##### ##### ##### #####
#####
##### ##### ##### #####
##### ##### ##### #####

general:
  # root directory where to save the inference results
  output_folder: "./experiments/outputs/5fold_test_fold1/"

  # Runs testing if you add a path here to compute classification metrics on the inference output,
  # with "" code does not run testing
  testing_folder: "./experiments/outputs/5fold_test_fold1/"

data_loader:
  batch_size: 1 # train and valid batch size
  num_workers: 8 # number of workers per data loader

  temp_folder:  "./experiments/outputs/5fold_test_fold1/"
  prepare_dataset: True

  rc_csv: "./data/dataset/RC_dataset/video_info.csv"

  valid: [
       { "pkl_path": "./data/dataset/RC_dataset_embeddings_1x",
        "video_list": "./data/dataset/RC_lists/5_fold/fold1_test.txt",
        "csv_path": "./data/dataset/RC_annotation/",
        "subsampling_factor": 5 ,
        "dataset_name": "fold1",
        "gt_name": "GT",
        "str_to_idx":  { "outside": 0, "insertion": 1, "ceacum": 2, "ileum": 3, "ascending": 4, "transverse": 5, "descending": 6, "sigmoid": 7, "rectum": 8, "n.a.": 999, "uncertain": 999 }  },
  ]

  remove_idx: False

model:
  # add a path if you wish to finetune the model
  model_path: "./experiments/outputs/5fold_colontcn_fold_1/checkpoint_500.pth"

  # Model Architecture
  model_type: "colontcn" # mstcn or tcn

  ### Model Architecture
  input_size: 2048 # input embedding dimension
  list_of_features_sizes: [64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64] # features sizes in each temporal block
  kernel_size: 7 # size of the 1D kernel at every layer in every block
  dropout: 0.5 # amount of dropout applied after each 1D conv layer in every block
  num_of_convs: 2 # number of temporal convolutions in each temporal block
  residual: True # whether to apply residual connections in the temporal blocks
  last_layer: "conv" # last layer that makes frames class predictions, either "linear" (FC) or "conv" (1D conv)
  output_size: 9   # number of output classes of the model
